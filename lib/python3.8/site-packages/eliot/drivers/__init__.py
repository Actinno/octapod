
from eliot.component.ModbusDevice import ModbusDevice
from importlib import import_module

class ModbusDriverLoadError(Exception):
    pass

def load_driver(module_name):
    """
    Carga un driver de dispositivo Modbus.
    Los drivers son m칩dulos Python. Las clases que implementan deben 
    ser subclases de :class:`eliot.component.ModbusDevice`
    """

    INVALID_DRIVER_MSG = f"El m칩dulo {module_name} no es un driver v치lido de dispositivo Modbus"

    if not isinstance(module_name, str):
        raise ModbusDriverLoadError("module_name debe ser el nombre del m칩dulo que hay que importar")
    try:
        module = import_module(module_name)
    except (ImportError, ModuleNotFoundError) as e:
        raise ModbusDriverLoadError(f"Error cargando driver {module_name}: {e}")

    try:
        if not issubclass(module.Driver, ModbusDevice):
            raise ModbusDriverLoadError(INVALID_DRIVER_MSG + ": no es una subclase de ModbusDevice")
    except AttributeError as e:
        raise ModbusDriverLoadError(INVALID_DRIVER_MSG + f": {e}")
     
    return module.Driver

